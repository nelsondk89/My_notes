



### git rebase ###

# находясь в целевой ветке ( например feature ) передвинуть ее на самый последний коммит ( master )
# git branch
#
# feature*
# master
#
# git rebase master


# отменить (процесс!) rebase и вернуть все к состоянию до его начала
# git rebase --abort


# открыть vim-ом файл с конфликтом, разрешить конфликт и сохранить.


# добавить файл в 
# git add <file_name>


# продолжить rebase (выполняется после разрешения конфликтов)
# git rebase --continue





# Сохраняет все изменения в рабочем каталоге в stash. Это эквивалентно git stash push -u -m "Ваше сообщение" (см. опции ниже).
# git stash или git stash push:  


# Сохраняет изменения в stash, добавляя текстовое описание. Это помогает понять, что было сохранено в данном stash.  Например: git stash push -m "Исправляю верстку страницы профиля".
# git stash push -m "Сообщение"


# Сохраняет не только измененные и добавленные файлы, но и неотслеживаемые файлы (файлы, которые Git игнорирует).
# git stash push -u


# Показывает список всех сохраненных stash.  Каждый stash имеет индекс (например, stash@{0}, stash@{1}).
# git stash list


# Применяет последний сохраненный stash (stash@{0}) к вашему рабочему каталогу.  Изменения из stash добавляются в ваш рабочий каталог, но *stash при этом не удаляется*.
# git stash apply


# Применяет конкретный stash из списка (например, git stash apply stash@{1}).
# git stash apply stash@{n}


# Применяет последний сохраненный stash (stash@{0}) и сразу же удаляет его из stash.  Это то же самое, что git stash apply + git stash drop.
# git stash pop


# Применяет конкретный stash и сразу же удаляет его.
# git stash pop stash@{n}


# Удаляет последний сохраненный stash (stash@{0}).
# git stash drop


# Удаляет конкретный stash.
# git stash drop stash@{n}


# Удаляет все stash.
# git stash clear


# Создает новую ветку из коммита, на котором был основан stash, восстанавливает stash в этой новой ветке и затем удаляет stash. 
# Это полезно, если изменения в stash конфликтуют с текущей веткой.
# git stash branch <branchname>
